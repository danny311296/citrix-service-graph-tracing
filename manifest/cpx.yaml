kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cpx-ingress-k8s-role
rules:
  - apiGroups: [""]
    resources: ["endpoints", "ingresses", "pods", "secrets", "nodes", "routes", "namespaces"]
    verbs: ["get", "list", "watch"]
  # services/status is needed to update the loadbalancer IP in service status for integrating
  # service of type LoadBalancer with external-dns
  - apiGroups: [""]
    resources: ["services/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["extensions"]
    resources: ["ingresses", "ingresses/status"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["citrix.com"]
    resources: ["rewritepolicies", "canarycrds", "authpolicies", "ratelimits"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["citrix.com"]
    resources: ["vips"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["route.openshift.io"]
    resources: ["routes"]
    verbs: ["get", "list", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: cpx-ingress-k8s-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cpx-ingress-k8s-role
subjects:
- kind: ServiceAccount
  name: cpx-ingress-k8s-role
  namespace: default
apiVersion: rbac.authorization.k8s.io/v1

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: cpx-ingress-k8s-role
  namespace: default

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cpx-ingress
spec:
  replicas: 1
  template:
    metadata:
      name: cpx-ingress
      labels:
        app: cpx-ingress
      annotations:
    spec:
      serviceAccountName: cpx-ingress-k8s-role
      containers:
        - name: cpx-ingress
          image: "quay.io/citrix/citrix-k8s-cpx-ingress:13.0-47.103"
          securityContext:
             privileged: true
          env:
          - name: "EULA"
            value: "yes"
          - name: "KUBERNETES_TASK_ID"
            value: ""
          - name: "NS_MGMT_SERVER"
            value: "10.106.192.44"
          - name: "NS_MGMT_FINGER_PRINT"
            value: "C5:8F:CB:8B:4C:5D:36:F3:C8:8B:82:B4:F6:3A:E1:46:99:D6:0F:EE"
          - name: "NS_HTTP_PORT"
            value: "9080"
          - name: "NS_HTTPS_PORT"
            value: "9443"
          - name: "LOGSTREAM_COLLECTOR_IP"
            value: "10.106.192.44"
          imagePullPolicy: IfNotPresent
        # Add cic as a sidecar
        - name: cic
          image: "quay.io/citrix/citrix-k8s-ingress-controller:1.5.6"
          env:
          - name: "EULA"
            value: "yes"
          - name: "NS_IP"
            value: "127.0.0.1"
          - name: "NS_PROTOCOL"
            value: "HTTP"
          - name: "NS_PORT"
            value: "80"
          - name: "NS_DEPLOYMENT_MODE"
            value: "SIDECAR"
          - name: "NS_ENABLE_MONITORING"
            value: "YES"
          - name: "NS_DISTRIBUTED_TRACING"
            value: "yes"
          - name: "NS_LOGPROXY"
            value: "10.106.192.44"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          args:
            - --ingress-classes
              netflix-cpx
          imagePullPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: cpx-ingress
  labels:
    app: cpx-ingress
spec:
  type: NodePort
  ports:
  - port: 80
    protocol: TCP
    name: http
  - port: 443
    protocol: TCP
    name: https
  selector:
    app: cpx-ingress

---


apiVersion: v1
kind: Service
metadata:
  name: sales-portal
spec:
  ports:
  - name: sales-portal-80
    port: 80
    targetPort: 80
  - name: sales-portal-443
    port: 443
    targetPort: 443
  selector:
    app: cpx-ingress

---

apiVersion: v1
kind: Service
metadata:
  name: leads
spec:
  ports:
  - name: leads-80
    port: 80
    targetPort: 80
  - name: leads-443
    port: 443
    targetPort: 443
  selector:
    app: cpx-ingress

---

apiVersion: v1
kind: Service
metadata:
  name: opportunities
spec:
  ports:
  - name: opportunities-80
    port: 80
    targetPort: 80
  - name: opportunities-443
    port: 443
    targetPort: 443
  selector:
    app: cpx-ingress
    
---

apiVersion: v1
kind: Service
metadata:
  name: product-catalogue
spec:
  ports:
  - name: product-catalogue-80
    port: 80
    targetPort: 80
  - name: product-catalogue-443
    port: 443
    targetPort: 443
  selector:
    app: cpx-ingress
    
---

apiVersion: v1
kind: Service
metadata:
  name: catalogue-store
spec:
  ports:
  - name: catalogue-store-80
    port: 80
    targetPort: 80
  - name: catalogue-store-443
    port: 443
    targetPort: 443
  selector:
    app: cpx-ingress
    
---

apiVersion: v1
kind: Service
metadata:
  name: accounts
spec:
  ports:
  - name: accounts-80
    port: 80
    targetPort: 80
  - name: accounts-443
    port: 443
    targetPort: 443
  selector:
    app: cpx-ingress
    
---

apiVersion: v1
kind: Service
metadata:
  name: payables
spec:
  ports:
  - name: payables-80
    port: 80
    targetPort: 80
  - name: payables-443
    port: 443
    targetPort: 443
  selector:
    app: cpx-ingress
    
---

apiVersion: v1
kind: Service
metadata:
  name: receivables
spec:
  ports:
  - name: receivables-80
    port: 80
    targetPort: 80
  - name: receivables-443
    port: 443
    targetPort: 443
  selector:
    app: cpx-ingress
    
---
